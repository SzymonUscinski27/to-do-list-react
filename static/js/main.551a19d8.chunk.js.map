{"version":3,"sources":["Form/index.js","List/index.js","Buttons/index.js","Section/index.js","Header/index.js","Main/index.js","App.js","reportWebVitals.js","index.js"],"names":["Form","addNewTask","useState","newTaskContent","setNewTaskContent","className","onSubmit","event","preventDefault","trim","value","placeholder","autoFocus","required","onChange","target","List","tasks","hideDone","toggleTaskDone","removeTask","map","task","done","onClick","id","content","Buttons","toggleHideDone","setAllDone","length","Fragment","disabled","every","Section","title","extraSectionContent","extraHeaderContent","Header","Main","children","App","setHideDone","setTasks","filter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.551a19d8.chunk.js","sourcesContent":["import { useState } from \"react\";\r\nimport \"./style.css\";\r\n\r\nconst Form = ({ addNewTask }) => {\r\n    const [newTaskContent, setNewTaskContent] = useState(\"\");\r\n\r\n    const onFormSubmit = (event) => {\r\n        event.preventDefault();\r\n        addNewTask(newTaskContent.trim());\r\n        setNewTaskContent(\"\");\r\n    };\r\n\r\n    return (\r\n        <form className=\"form\" onSubmit={onFormSubmit}>\r\n            <input\r\n                value={newTaskContent}\r\n                className=\"form__input\"\r\n                placeholder=\"Co jest do zrobienia?\"\r\n                autoFocus\r\n                required\r\n                onChange={({ target }) => setNewTaskContent(target.value)}\r\n            />\r\n            <button className=\"form__button\">Dodaj zadanie</button>\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default Form;","import \"./style.css\";\r\n\r\nconst List = ({ tasks, hideDone, toggleTaskDone, removeTask }) => (\r\n    <ul className=\"list\">\r\n        {tasks.map(task => (\r\n            <li\r\n                key={task.id}\r\n                className={`list__item${task.done && hideDone\r\n                    ? \" list__item--hidden\"\r\n                    : \"\"}`\r\n                }\r\n            >\r\n                <button\r\n                    className=\"list__button list__button--done\"\r\n                    onClick={() => toggleTaskDone(task.id)}>\r\n                    {task.done ? \"âœ“\" : \"\"}\r\n                </button>\r\n                <span className={\r\n                    `list__taskContent${task.done ? \" list__taskContent--done\" : \"\"}`\r\n                }\r\n                >\r\n                    {task.content}\r\n                </span>\r\n                <button\r\n                    className=\"list__button list__button--remove\"\r\n                    onClick={() => removeTask(task.id)}>\r\n                    ðŸ—‘\r\n                </button>\r\n            </li>\r\n        ))}\r\n    </ul>\r\n);\r\n\r\nexport default List;","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nconst Buttons = ({ tasks, hideDone, toggleHideDone, setAllDone }) => (\r\n  <div className=\"buttons js-buttons\">\r\n    {tasks.length > 0 && (\r\n      <React.Fragment>\r\n        <button onClick={toggleHideDone} className=\"buttons__button\">\r\n          {hideDone ? \"PokaÅ¼\" : \"Ukryj\"} ukoÅ„czone\r\n        </button>\r\n        <button\r\n          className=\"buttons__button\"\r\n          disabled={tasks.every(({ done }) => done)}\r\n          onClick={setAllDone}\r\n        >\r\n          UkoÅ„cz wszystkie\r\n        </button>\r\n      </React.Fragment>\r\n    )}\r\n  </div>\r\n)\r\n\r\nexport default Buttons;\r\n","import \"./style.css\";\r\n\r\nconst Section = ({ title, extraSectionContent, extraHeaderContent }) => (\r\n    <section className=\"section\">\r\n        <header className=\"section__header\">\r\n            <h2>{title}</h2>\r\n            {extraHeaderContent}\r\n        </header>\r\n        <div className=\"section__body\">\r\n            {extraSectionContent}\r\n        </div>\r\n    </section>\r\n);\r\n\r\nexport default Section;","const Header = ({ title }) => (\r\n    <header>\r\n        <h1>{title}</h1>\r\n    </header>\r\n);\r\n\r\nexport default Header;","import \"./style.css\";\r\n\r\nconst Main = ({ children }) => (\r\n    <main className=\"main\">\r\n        {children}\r\n    </main>\r\n);\r\n\r\nexport default Main;","import React, { useState } from \"react\";\nimport Form from \"./Form\";\nimport List from \"./List\";\nimport Buttons from \"./Buttons\";\nimport Section from \"./Section\";\nimport Header from \"./Header\";\nimport Main from \"./Main\";\n\nfunction App() {\n  const [hideDone, setHideDone] = useState(false);\n  const [tasks, setTasks] = useState([\n    { id: 1, content: \"PrzejÅ›Ä‡ na Reacta\", done: false },\n    { id: 2, content: \"zjeÅ›Ä‡ obiad\", done: true },\n  ]);\n\n  const removeTask = (id) => {\n    setTasks(tasks => tasks.filter(task => task.id !== id));\n  };\n\n  const toggleHideDone = () => {\n    setHideDone(hideDone => !hideDone);\n  };\n\n  const toggleTaskDone = (id) => {\n    setTasks(tasks => tasks.map(task => {\n      if (task.id === id) {\n        return { ...task, done: !task.done };\n      }\n\n      return task;\n    }));\n  }\n\n  const setAllDone = () => {\n    setTasks(tasks => tasks.map(task => ({\n      ...task,\n      done: true\n    })));\n  }\n\n  const addNewTask = (newTaskContent) => {\n    setTasks(tasks => [\n      ...tasks,\n      {\n        content: newTaskContent,\n        done: false,\n        id: tasks.length === 0 ? 1 : tasks[tasks.length - 1].id + 1,\n      },\n    ]);\n  };\n\n\n  return (\n    <Main>\n      <Header title=\"Lista zadaÅ„\" />\n      <Section\n        title=\"Dodaj nowe zadanie\"\n        extraSectionContent={<Form addNewTask={addNewTask} />}\n      />\n      <Section\n        title=\"Lista zadaÅ„\"\n        extraHeaderContent={\n          <Buttons\n            tasks={tasks}\n            hideDone={hideDone}\n            toggleHideDone={toggleHideDone}\n            setAllDone={setAllDone}\n          />\n        }\n        extraSectionContent={\n          <List\n            tasks={tasks}\n            hideDone={hideDone}\n            toggleTaskDone={toggleTaskDone}\n            removeTask={removeTask}\n          />\n        }\n      />\n    </Main>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}